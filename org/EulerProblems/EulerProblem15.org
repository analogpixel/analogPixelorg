* Problem

  Starting in the top left corner of a 2×2 grid, and only being able to move to the right and down, there are exactly 6 routes to the bottom right corner.

  How many such routes are there through a 20×20 grid?

* Solution
  The binomial coefficient is the number of ways of picking k unordered outcomes from n possibilities, also known as a combination or combinatorial.

   The number of lattice paths from the origin (0,0) to a point (a,b) is the binomial coefficient: $$( ^{a+b}   _a )$$

  to Solve the binomial coefficient:
  $$ (^n _k) = \frac{n!}{(n-k)! k!} $$

  so for a 20x20 grid it would be the binomial coefficient:
  $$( ^{20+20} _{20} )$$
  plug into the formula:
  $$ \frac{40!}{20! * 20!}$$

* Solution in Python
  #+begin_src python
  print math.factorial(40) / ( math.factorial(20) * math.factorial(20) )
  #+end_src


* Python
  This is recursive code to figure it out, but when you get 20x20 it runs forever and a day, so I went of into the internet to figure out the formula to calculate the lattice size (above)

  #+begin_src python
  import math

  class Memoize:
      def __init__(self, f):
          self.f = f
          self.memo = {}
      def __call__(self, *args):
          if not args in self.memo:
              self.memo[args] = self.f(*args)
          return self.memo[args]

  X = 20
  Y = 20

  def f(x,y,X,Y,t):

      if x == X and y == Y:
          return t + 1

      if x+1 <= X:
          t =  f(x+1,y,X,Y,t)

      if y+1 <= Y:
          t = f(x,y+1,X,Y,t)

      return t

  ff = Memoize(f)

  print ff(0,0,X,Y,0)

  #+end_src


* C
  #+begin_src c
  #include <stdio.h>

  long f(int x, int y, int X, int Y, long t) {
      if ((x == X) && (y == Y)) {
          return t + 1;
      }

      if ((x +1) <= X) {
          t = f(x+1, y, X,Y, t);
      }

      if ( (y+1) <= Y) {
          t = f(x,y+1,X,Y,t);
      }

      return t;
   }

  int main() {
      long a = f(0,0,20,20,0);
      printf("%lu\n",a);
      return 0;
   }
  #+end_src


* Links
  [[http://mathworld.wolfram.com/BinomialCoefficient.html][Binomial Coefficien]]

@TAGS binomial, possibilities,combination, binomialcoefficient, lattice, latticePath,C,Memoize
